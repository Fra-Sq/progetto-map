.TH "di.uniba.map.b.adventure.type.Command" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
di.uniba.map.b.adventure.type.Command
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCommand\fP (\fBCommandType\fP type, String name)"
.br
.ti -1c
.RI "\fBCommand\fP (\fBCommandType\fP type, String name, Set< String > alias)"
.br
.ti -1c
.RI "String \fBgetName\fP ()"
.br
.ti -1c
.RI "Set< String > \fBgetAlias\fP ()"
.br
.ti -1c
.RI "void \fBsetAlias\fP (Set< String > alias)"
.br
.ti -1c
.RI "void \fBsetAlias\fP (String[] alias)"
.br
.ti -1c
.RI "\fBCommandType\fP \fBgetType\fP ()"
.br
.ti -1c
.RI "int \fBhashCode\fP ()"
.br
.ti -1c
.RI "boolean \fBequals\fP (Object obj)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Represents a command in the adventure game\&. Commands are actions that the player can perform, such as moving, picking up items, or interacting with the game world\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.Command (\fBCommandType\fP type, String name)"
Constructs a \fBCommand\fP with a specified type and name\&. This constructor initializes a command without any aliases\&.
.PP
\fBParameters\fP
.RS 4
\fItype\fP The type of the command\&. 
.br
\fIname\fP The primary name of the command\&. 
.RE
.PP

.SS "di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.Command (\fBCommandType\fP type, String name, Set< String > alias)"
Constructs a \fBCommand\fP with a specified type, name, and set of aliases\&. This constructor allows for the initialization of a command with multiple names\&.
.PP
\fBParameters\fP
.RS 4
\fItype\fP The type of the command\&. 
.br
\fIname\fP The primary name of the command\&. 
.br
\fIalias\fP A set of alternative names or aliases for the command\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "boolean di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.equals (Object obj)"
Compares this command to another object for equality\&. Two commands are considered equal if they have the same type\&.
.PP
\fBParameters\fP
.RS 4
\fIobj\fP The object to compare with this command\&. 
.RE
.PP
\fBReturns\fP
.RS 4
true if the specified object is a command with the same type; false otherwise\&. 
.RE
.PP

.SS "Set< String > di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.getAlias ()"
Returns the set of aliases for the command\&.
.PP
\fBReturns\fP
.RS 4
A set of alternative names or aliases for the command\&. 
.RE
.PP

.SS "String di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.getName ()"
Returns the primary name of the command\&.
.PP
\fBReturns\fP
.RS 4
The primary name of the command\&. 
.RE
.PP

.SS "\fBCommandType\fP di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.getType ()"
Returns the type of the command\&.
.PP
\fBReturns\fP
.RS 4
The type of the command\&. 
.RE
.PP

.SS "int di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.hashCode ()"
Generates a hash code for the command\&. The hash code is based primarily on the command's type\&.
.PP
\fBReturns\fP
.RS 4
A hash code for the command\&. 
.RE
.PP

.SS "void di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.setAlias (Set< String > alias)"
Sets the aliases for the command\&.
.PP
\fBParameters\fP
.RS 4
\fIalias\fP A set of alternative names or aliases for the command\&. 
.RE
.PP

.SS "void di\&.uniba\&.map\&.b\&.adventure\&.type\&.Command\&.setAlias (String[] alias)"
Sets the aliases for the command from an array of strings\&. This method converts the array into a set and assigns it to the command\&.
.PP
\fBParameters\fP
.RS 4
\fIalias\fP An array of alternative names or aliases for the command\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
